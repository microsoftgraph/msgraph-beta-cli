// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// A device app management task.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DeviceAppManagementTask : global::ApiSdk.Models.Entity, IParsable
    {
        /// <summary>The name or email of the admin this task is assigned to.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AssignedTo { get; set; }
#nullable restore
#else
        public string AssignedTo { get; set; }
#endif
        /// <summary>Device app management task category.</summary>
        public global::ApiSdk.Models.DeviceAppManagementTaskCategory? Category { get; set; }
        /// <summary>The created date.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The email address of the creator.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Creator { get; set; }
#nullable restore
#else
        public string Creator { get; set; }
#endif
        /// <summary>Notes from the creator.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatorNotes { get; set; }
#nullable restore
#else
        public string CreatorNotes { get; set; }
#endif
        /// <summary>The description.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The name.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The due date.</summary>
        public DateTimeOffset? DueDateTime { get; set; }
        /// <summary>Device app management task priority.</summary>
        public global::ApiSdk.Models.DeviceAppManagementTaskPriority? Priority { get; set; }
        /// <summary>Device app management task status.</summary>
        public global::ApiSdk.Models.DeviceAppManagementTaskStatus? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.DeviceAppManagementTask"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.DeviceAppManagementTask CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.appVulnerabilityTask" => new global::ApiSdk.Models.AppVulnerabilityTask(),
                "#microsoft.graph.securityConfigurationTask" => new global::ApiSdk.Models.SecurityConfigurationTask(),
                "#microsoft.graph.unmanagedDeviceDiscoveryTask" => new global::ApiSdk.Models.UnmanagedDeviceDiscoveryTask(),
                _ => new global::ApiSdk.Models.DeviceAppManagementTask(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "assignedTo", n => { AssignedTo = n.GetStringValue(); } },
                { "category", n => { Category = n.GetEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskCategory>(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "creator", n => { Creator = n.GetStringValue(); } },
                { "creatorNotes", n => { CreatorNotes = n.GetStringValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "dueDateTime", n => { DueDateTime = n.GetDateTimeOffsetValue(); } },
                { "priority", n => { Priority = n.GetEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskPriority>(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("assignedTo", AssignedTo);
            writer.WriteEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskCategory>("category", Category);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("creator", Creator);
            writer.WriteStringValue("creatorNotes", CreatorNotes);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteDateTimeOffsetValue("dueDateTime", DueDateTime);
            writer.WriteEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskPriority>("priority", Priority);
            writer.WriteEnumValue<global::ApiSdk.Models.DeviceAppManagementTaskStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
