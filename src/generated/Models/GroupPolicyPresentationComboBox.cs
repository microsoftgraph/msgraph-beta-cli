// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models {
    /// <summary>
    /// Represents an ADMX comboBox element and an ADMX text element.
    /// </summary>
    public class GroupPolicyPresentationComboBox : GroupPolicyUploadedPresentation, IParsable 
    {
        /// <summary>Localized default string displayed in the combo box. The default value is empty.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultValue { get; set; }
#nullable restore
#else
        public string DefaultValue { get; set; }
#endif
        /// <summary>An unsigned integer that specifies the maximum number of text characters for the parameter. The default value is 1023.</summary>
        public long? MaxLength { get; set; }
        /// <summary>Specifies whether a value must be specified for the parameter. The default value is false.</summary>
        public bool? Required { get; set; }
        /// <summary>Localized strings listed in the drop-down list of the combo box. The default value is empty.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Suggestions { get; set; }
#nullable restore
#else
        public List<string> Suggestions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="GroupPolicyPresentationComboBox"/> and sets the default values.
        /// </summary>
        public GroupPolicyPresentationComboBox() : base()
        {
            OdataType = "#microsoft.graph.groupPolicyPresentationComboBox";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="GroupPolicyPresentationComboBox"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new GroupPolicyPresentationComboBox CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new GroupPolicyPresentationComboBox();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                {"defaultValue", n => { DefaultValue = n.GetStringValue(); } },
                {"maxLength", n => { MaxLength = n.GetLongValue(); } },
                {"required", n => { Required = n.GetBoolValue(); } },
                {"suggestions", n => { Suggestions = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("defaultValue", DefaultValue);
            writer.WriteLongValue("maxLength", MaxLength);
            writer.WriteBoolValue("required", Required);
            writer.WriteCollectionOfPrimitiveValues<string>("suggestions", Suggestions);
        }
    }
}
