// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class TeamworkDeviceConfiguration : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The camera configuration. Applicable only for Microsoft Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkCameraConfiguration? CameraConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkCameraConfiguration CameraConfiguration { get; set; }
#endif
        /// <summary>Identity of the user who created the device configuration document.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.IdentitySet? CreatedBy { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.IdentitySet CreatedBy { get; set; }
#endif
        /// <summary>The UTC date and time when the device configuration document was created.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The display configuration.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkDisplayConfiguration? DisplayConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkDisplayConfiguration DisplayConfiguration { get; set; }
#endif
        /// <summary>The hardware configuration. Applicable only for Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkHardwareConfiguration? HardwareConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkHardwareConfiguration HardwareConfiguration { get; set; }
#endif
        /// <summary>Identity of the user who last modified the device configuration.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.IdentitySet? LastModifiedBy { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.IdentitySet LastModifiedBy { get; set; }
#endif
        /// <summary>The UTC date and time when the device configuration was last modified.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The microphone configuration. Applicable only for Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkMicrophoneConfiguration? MicrophoneConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkMicrophoneConfiguration MicrophoneConfiguration { get; set; }
#endif
        /// <summary>Information related to software versions for the device, such as firmware, operating system, Teams client, and admin agent.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkDeviceSoftwareVersions? SoftwareVersions { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkDeviceSoftwareVersions SoftwareVersions { get; set; }
#endif
        /// <summary>The speaker configuration. Applicable only for Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkSpeakerConfiguration? SpeakerConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkSpeakerConfiguration SpeakerConfiguration { get; set; }
#endif
        /// <summary>The system configuration. Not applicable for Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkSystemConfiguration? SystemConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkSystemConfiguration SystemConfiguration { get; set; }
#endif
        /// <summary>The Teams client configuration. Applicable only for Teams Rooms-enabled devices.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.TeamworkTeamsClientConfiguration? TeamsClientConfiguration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.TeamworkTeamsClientConfiguration TeamsClientConfiguration { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.TeamworkDeviceConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.TeamworkDeviceConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.TeamworkDeviceConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "cameraConfiguration", n => { CameraConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkCameraConfiguration>(global::ApiSdk.Models.TeamworkCameraConfiguration.CreateFromDiscriminatorValue); } },
                { "createdBy", n => { CreatedBy = n.GetObjectValue<global::ApiSdk.Models.IdentitySet>(global::ApiSdk.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "displayConfiguration", n => { DisplayConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkDisplayConfiguration>(global::ApiSdk.Models.TeamworkDisplayConfiguration.CreateFromDiscriminatorValue); } },
                { "hardwareConfiguration", n => { HardwareConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkHardwareConfiguration>(global::ApiSdk.Models.TeamworkHardwareConfiguration.CreateFromDiscriminatorValue); } },
                { "lastModifiedBy", n => { LastModifiedBy = n.GetObjectValue<global::ApiSdk.Models.IdentitySet>(global::ApiSdk.Models.IdentitySet.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "microphoneConfiguration", n => { MicrophoneConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkMicrophoneConfiguration>(global::ApiSdk.Models.TeamworkMicrophoneConfiguration.CreateFromDiscriminatorValue); } },
                { "softwareVersions", n => { SoftwareVersions = n.GetObjectValue<global::ApiSdk.Models.TeamworkDeviceSoftwareVersions>(global::ApiSdk.Models.TeamworkDeviceSoftwareVersions.CreateFromDiscriminatorValue); } },
                { "speakerConfiguration", n => { SpeakerConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkSpeakerConfiguration>(global::ApiSdk.Models.TeamworkSpeakerConfiguration.CreateFromDiscriminatorValue); } },
                { "systemConfiguration", n => { SystemConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkSystemConfiguration>(global::ApiSdk.Models.TeamworkSystemConfiguration.CreateFromDiscriminatorValue); } },
                { "teamsClientConfiguration", n => { TeamsClientConfiguration = n.GetObjectValue<global::ApiSdk.Models.TeamworkTeamsClientConfiguration>(global::ApiSdk.Models.TeamworkTeamsClientConfiguration.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkCameraConfiguration>("cameraConfiguration", CameraConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.IdentitySet>("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkDisplayConfiguration>("displayConfiguration", DisplayConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkHardwareConfiguration>("hardwareConfiguration", HardwareConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.IdentitySet>("lastModifiedBy", LastModifiedBy);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkMicrophoneConfiguration>("microphoneConfiguration", MicrophoneConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkDeviceSoftwareVersions>("softwareVersions", SoftwareVersions);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkSpeakerConfiguration>("speakerConfiguration", SpeakerConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkSystemConfiguration>("systemConfiguration", SystemConfiguration);
            writer.WriteObjectValue<global::ApiSdk.Models.TeamworkTeamsClientConfiguration>("teamsClientConfiguration", TeamsClientConfiguration);
        }
    }
}
#pragma warning restore CS0618
