// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// Android Device Owner certificate profile base.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class AndroidDeviceOwnerCertificateProfileBase : global::ApiSdk.Models.DeviceConfiguration, IParsable
    {
        /// <summary>Certificate Validity Period Options.</summary>
        public global::ApiSdk.Models.CertificateValidityPeriodScale? CertificateValidityPeriodScale { get; set; }
        /// <summary>Value for the Certificate Validity Period.</summary>
        public int? CertificateValidityPeriodValue { get; set; }
        /// <summary>Extended Key Usage (EKU) settings. This collection can contain a maximum of 500 elements.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.ExtendedKeyUsage>? ExtendedKeyUsages { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.ExtendedKeyUsage> ExtendedKeyUsages { get; set; }
#endif
        /// <summary>Certificate renewal threshold percentage. Valid values 1 to 99</summary>
        public int? RenewalThresholdPercentage { get; set; }
        /// <summary>Trusted Root Certificate.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.AndroidDeviceOwnerTrustedRootCertificate? RootCertificate { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.AndroidDeviceOwnerTrustedRootCertificate RootCertificate { get; set; }
#endif
        /// <summary>Certificate Subject Alternative Name Type. Possible values are: none, emailAddress, userPrincipalName, customAzureADAttribute, domainNameService, universalResourceIdentifier.</summary>
        public global::ApiSdk.Models.SubjectAlternativeNameType? SubjectAlternativeNameType { get; set; }
        /// <summary>Certificate Subject Name Format. Possible values are: commonName, commonNameIncludingEmail, commonNameAsEmail, custom, commonNameAsIMEI, commonNameAsSerialNumber, commonNameAsAadDeviceId, commonNameAsIntuneDeviceId, commonNameAsDurableDeviceId.</summary>
        public global::ApiSdk.Models.SubjectNameFormat? SubjectNameFormat { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.AndroidDeviceOwnerCertificateProfileBase"/> and sets the default values.
        /// </summary>
        public AndroidDeviceOwnerCertificateProfileBase() : base()
        {
            OdataType = "#microsoft.graph.androidDeviceOwnerCertificateProfileBase";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.AndroidDeviceOwnerCertificateProfileBase"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.AndroidDeviceOwnerCertificateProfileBase CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.androidDeviceOwnerImportedPFXCertificateProfile" => new global::ApiSdk.Models.AndroidDeviceOwnerImportedPFXCertificateProfile(),
                "#microsoft.graph.androidDeviceOwnerPkcsCertificateProfile" => new global::ApiSdk.Models.AndroidDeviceOwnerPkcsCertificateProfile(),
                "#microsoft.graph.androidDeviceOwnerScepCertificateProfile" => new global::ApiSdk.Models.AndroidDeviceOwnerScepCertificateProfile(),
                _ => new global::ApiSdk.Models.AndroidDeviceOwnerCertificateProfileBase(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "certificateValidityPeriodScale", n => { CertificateValidityPeriodScale = n.GetEnumValue<global::ApiSdk.Models.CertificateValidityPeriodScale>(); } },
                { "certificateValidityPeriodValue", n => { CertificateValidityPeriodValue = n.GetIntValue(); } },
                { "extendedKeyUsages", n => { ExtendedKeyUsages = n.GetCollectionOfObjectValues<global::ApiSdk.Models.ExtendedKeyUsage>(global::ApiSdk.Models.ExtendedKeyUsage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "renewalThresholdPercentage", n => { RenewalThresholdPercentage = n.GetIntValue(); } },
                { "rootCertificate", n => { RootCertificate = n.GetObjectValue<global::ApiSdk.Models.AndroidDeviceOwnerTrustedRootCertificate>(global::ApiSdk.Models.AndroidDeviceOwnerTrustedRootCertificate.CreateFromDiscriminatorValue); } },
                { "subjectAlternativeNameType", n => { SubjectAlternativeNameType = n.GetEnumValue<global::ApiSdk.Models.SubjectAlternativeNameType>(); } },
                { "subjectNameFormat", n => { SubjectNameFormat = n.GetEnumValue<global::ApiSdk.Models.SubjectNameFormat>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::ApiSdk.Models.CertificateValidityPeriodScale>("certificateValidityPeriodScale", CertificateValidityPeriodScale);
            writer.WriteIntValue("certificateValidityPeriodValue", CertificateValidityPeriodValue);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.ExtendedKeyUsage>("extendedKeyUsages", ExtendedKeyUsages);
            writer.WriteIntValue("renewalThresholdPercentage", RenewalThresholdPercentage);
            writer.WriteObjectValue<global::ApiSdk.Models.AndroidDeviceOwnerTrustedRootCertificate>("rootCertificate", RootCertificate);
            writer.WriteEnumValue<global::ApiSdk.Models.SubjectAlternativeNameType>("subjectAlternativeNameType", SubjectAlternativeNameType);
            writer.WriteEnumValue<global::ApiSdk.Models.SubjectNameFormat>("subjectNameFormat", SubjectNameFormat);
        }
    }
}
#pragma warning restore CS0618
