// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// Windows management app health state entity.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class WindowsManagementAppHealthState : global::ApiSdk.Models.Entity, IParsable
    {
        /// <summary>Name of the device on which Windows management app is installed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceName { get; set; }
#nullable restore
#else
        public string DeviceName { get; set; }
#endif
        /// <summary>Windows 10 OS version of the device on which Windows management app is installed.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceOSVersion { get; set; }
#nullable restore
#else
        public string DeviceOSVersion { get; set; }
#endif
        /// <summary>Indicates health state of the Windows management app.</summary>
        public global::ApiSdk.Models.HealthState? HealthState { get; set; }
        /// <summary>Windows management app installed version.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? InstalledVersion { get; set; }
#nullable restore
#else
        public string InstalledVersion { get; set; }
#endif
        /// <summary>Windows management app last check-in time.</summary>
        public DateTimeOffset? LastCheckInDateTime { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.WindowsManagementAppHealthState"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.WindowsManagementAppHealthState CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.WindowsManagementAppHealthState();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "deviceName", n => { DeviceName = n.GetStringValue(); } },
                { "deviceOSVersion", n => { DeviceOSVersion = n.GetStringValue(); } },
                { "healthState", n => { HealthState = n.GetEnumValue<global::ApiSdk.Models.HealthState>(); } },
                { "installedVersion", n => { InstalledVersion = n.GetStringValue(); } },
                { "lastCheckInDateTime", n => { LastCheckInDateTime = n.GetDateTimeOffsetValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("deviceName", DeviceName);
            writer.WriteStringValue("deviceOSVersion", DeviceOSVersion);
            writer.WriteEnumValue<global::ApiSdk.Models.HealthState>("healthState", HealthState);
            writer.WriteStringValue("installedVersion", InstalledVersion);
            writer.WriteDateTimeOffsetValue("lastCheckInDateTime", LastCheckInDateTime);
        }
    }
}
#pragma warning restore CS0618
