// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models.IndustryData {
    #pragma warning disable CS1591
    public class UserProvisioningFlow : ProvisioningFlow, IParsable 
    #pragma warning restore CS1591
    {
        /// <summary>A boolean choice indicating whether unmatched users should be created or ignored.</summary>
        public bool? CreateUnmatchedUsers { get; set; }
        /// <summary>The different management choices for the new users to be provisioned.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserCreationOptions? CreationOptions { get; set; }
#nullable restore
#else
        public UserCreationOptions CreationOptions { get; set; }
#endif
        /// <summary>The managementOptions property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public UserManagementOptions? ManagementOptions { get; set; }
#nullable restore
#else
        public UserManagementOptions ManagementOptions { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="UserProvisioningFlow"/> and sets the default values.
        /// </summary>
        public UserProvisioningFlow() : base()
        {
            OdataType = "#microsoft.graph.industryData.userProvisioningFlow";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="UserProvisioningFlow"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new UserProvisioningFlow CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new UserProvisioningFlow();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                {"createUnmatchedUsers", n => { CreateUnmatchedUsers = n.GetBoolValue(); } },
                {"creationOptions", n => { CreationOptions = n.GetObjectValue<UserCreationOptions>(UserCreationOptions.CreateFromDiscriminatorValue); } },
                {"managementOptions", n => { ManagementOptions = n.GetObjectValue<UserManagementOptions>(UserManagementOptions.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteBoolValue("createUnmatchedUsers", CreateUnmatchedUsers);
            writer.WriteObjectValue<UserCreationOptions>("creationOptions", CreationOptions);
            writer.WriteObjectValue<UserManagementOptions>("managementOptions", ManagementOptions);
        }
    }
}
