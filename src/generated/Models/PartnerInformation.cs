// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models
{
    #pragma warning disable CS1591
    public class PartnerInformation : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The commerceUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CommerceUrl { get; set; }
#nullable restore
#else
        public string CommerceUrl { get; set; }
#endif
        /// <summary>The companyName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CompanyName { get; set; }
#nullable restore
#else
        public string CompanyName { get; set; }
#endif
        /// <summary>The companyType property</summary>
        public PartnerTenantType? CompanyType { get; set; }
        /// <summary>The helpUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? HelpUrl { get; set; }
#nullable restore
#else
        public string HelpUrl { get; set; }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>The partnerTenantId property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PartnerTenantId { get; set; }
#nullable restore
#else
        public string PartnerTenantId { get; set; }
#endif
        /// <summary>The supportEmails property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SupportEmails { get; set; }
#nullable restore
#else
        public List<string> SupportEmails { get; set; }
#endif
        /// <summary>The supportTelephones property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? SupportTelephones { get; set; }
#nullable restore
#else
        public List<string> SupportTelephones { get; set; }
#endif
        /// <summary>The supportUrl property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SupportUrl { get; set; }
#nullable restore
#else
        public string SupportUrl { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="PartnerInformation"/> and sets the default values.
        /// </summary>
        public PartnerInformation()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="PartnerInformation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static PartnerInformation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new PartnerInformation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "commerceUrl", n => { CommerceUrl = n.GetStringValue(); } },
                { "companyName", n => { CompanyName = n.GetStringValue(); } },
                { "companyType", n => { CompanyType = n.GetEnumValue<PartnerTenantType>(); } },
                { "helpUrl", n => { HelpUrl = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "partnerTenantId", n => { PartnerTenantId = n.GetStringValue(); } },
                { "supportEmails", n => { SupportEmails = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "supportTelephones", n => { SupportTelephones = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "supportUrl", n => { SupportUrl = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteStringValue("commerceUrl", CommerceUrl);
            writer.WriteStringValue("companyName", CompanyName);
            writer.WriteEnumValue<PartnerTenantType>("companyType", CompanyType);
            writer.WriteStringValue("helpUrl", HelpUrl);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteStringValue("partnerTenantId", PartnerTenantId);
            writer.WriteCollectionOfPrimitiveValues<string>("supportEmails", SupportEmails);
            writer.WriteCollectionOfPrimitiveValues<string>("supportTelephones", SupportTelephones);
            writer.WriteStringValue("supportUrl", SupportUrl);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
