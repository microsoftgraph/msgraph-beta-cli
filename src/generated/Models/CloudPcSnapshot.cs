// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPcSnapshot : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The unique identifier for the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CloudPcId { get; set; }
#nullable restore
#else
        public string CloudPcId { get; set; }
#endif
        /// <summary>The date and time at which the snapshot was taken. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The date and time when the snapshot expires. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? ExpirationDateTime { get; set; }
        /// <summary>Indicates the health check status of the Cloud PC snapshot. Possible values are, unknown, healthy, unhealthy, unknownFutureValue. The default value is unknown. Read-only. Nullable.</summary>
        public global::ApiSdk.Models.CloudPcSnapshotHealthCheckStatus? HealthCheckStatus { get; set; }
        /// <summary>The date and time at which the snapshot was last used to restore the Cloud PC device. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastRestoredDateTime { get; set; }
        /// <summary>The type of snapshot that indicates how to create the snapshot. Possible values are automatic, manual. Default value is automatic.</summary>
        public global::ApiSdk.Models.CloudPcSnapshotType? SnapshotType { get; set; }
        /// <summary>The status of the Cloud PC snapshot. The possible values are: ready, unknownFutureValue.</summary>
        public global::ApiSdk.Models.CloudPcSnapshotStatus? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CloudPcSnapshot"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.CloudPcSnapshot CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.CloudPcSnapshot();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "cloudPcId", n => { CloudPcId = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "expirationDateTime", n => { ExpirationDateTime = n.GetDateTimeOffsetValue(); } },
                { "healthCheckStatus", n => { HealthCheckStatus = n.GetEnumValue<global::ApiSdk.Models.CloudPcSnapshotHealthCheckStatus>(); } },
                { "lastRestoredDateTime", n => { LastRestoredDateTime = n.GetDateTimeOffsetValue(); } },
                { "snapshotType", n => { SnapshotType = n.GetEnumValue<global::ApiSdk.Models.CloudPcSnapshotType>(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.CloudPcSnapshotStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("cloudPcId", CloudPcId);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteDateTimeOffsetValue("expirationDateTime", ExpirationDateTime);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcSnapshotHealthCheckStatus>("healthCheckStatus", HealthCheckStatus);
            writer.WriteDateTimeOffsetValue("lastRestoredDateTime", LastRestoredDateTime);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcSnapshotType>("snapshotType", SnapshotType);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcSnapshotStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
