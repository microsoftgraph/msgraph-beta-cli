// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPC : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The Microsoft Entra device ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AadDeviceId { get; set; }
#nullable restore
#else
        public string AadDeviceId { get; set; }
#endif
        /// <summary>The allotment name divides tenant licenses into smaller batches or groups that help restrict the number of licenses available for use in a specific assignment. When the provisioningType is dedicated, the allotment name is null. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AllotmentDisplayName { get; set; }
#nullable restore
#else
        public string AllotmentDisplayName { get; set; }
#endif
        /// <summary>The connection setting of the Cloud PC. Possible values: enableSingleSignOn. Read Only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcConnectionSetting? ConnectionSetting { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcConnectionSetting ConnectionSetting { get; set; }
#endif
        /// <summary>The connectionSettings property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcConnectionSettings? ConnectionSettings { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcConnectionSettings ConnectionSettings { get; set; }
#endif
        /// <summary>The connectivity health check result of a Cloud PC, including the updated timestamp and whether the Cloud PC can be connected.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcConnectivityResult? ConnectivityResult { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcConnectivityResult ConnectivityResult { get; set; }
#endif
        /// <summary>The name of the geographical region where the Cloud PC is currently provisioned. For example, westus3, eastus2, and southeastasia. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DeviceRegionName { get; set; }
#nullable restore
#else
        public string DeviceRegionName { get; set; }
#endif
        /// <summary>The disaster recovery status of the Cloud PC, including the primary region, secondary region, and capability type. The default value is null that indicates that the disaster recovery setting is disabled. To receive a response with the disasterRecoveryCapability property, $select and $filter it by disasterRecoveryCapability/{subProperty} in the request URL. For more information, see Example 4: List Cloud PCs filtered by disaster recovery capability type. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcDisasterRecoveryCapability? DisasterRecoveryCapability { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcDisasterRecoveryCapability DisasterRecoveryCapability { get; set; }
#endif
        /// <summary>The disk encryption applied to the Cloud PC. Possible values: notAvailable, notEncrypted, encryptedUsingPlatformManagedKey, encryptedUsingCustomerManagedKey, and unknownFutureValue.</summary>
        public global::ApiSdk.Models.CloudPcDiskEncryptionState? DiskEncryptionState { get; set; }
        /// <summary>The display name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The frontlineCloudPcAvailability property</summary>
        public global::ApiSdk.Models.FrontlineCloudPcAvailability? FrontlineCloudPcAvailability { get; set; }
        /// <summary>The date and time when the grace period ends and reprovisioning or deprovisioning happens. Required only if the status is inGracePeriod. The timestamp is shown in ISO 8601 format and Coordinated Universal Time (UTC). For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? GracePeriodEndDateTime { get; set; }
        /// <summary>Name of the OS image that&apos;s on the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ImageDisplayName { get; set; }
#nullable restore
#else
        public string ImageDisplayName { get; set; }
#endif
        /// <summary>The last login result of the Cloud PC. For example, { &apos;time&apos;: &apos;2014-01-01T00:00:00Z&apos;}.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcLoginResult? LastLoginResult { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcLoginResult LastLoginResult { get; set; }
#endif
        /// <summary>The last modified date and time of the Cloud PC. The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014, is 2014-01-01T00:00:00Z.</summary>
        public DateTimeOffset? LastModifiedDateTime { get; set; }
        /// <summary>The last remote action result of the enterprise Cloud PCs. The supported remote actions are: Reboot, Rename, Reprovision, Restore, Troubleshoot.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcRemoteActionResult? LastRemoteActionResult { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcRemoteActionResult LastRemoteActionResult { get; set; }
#endif
        /// <summary>The Intune device ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ManagedDeviceId { get; set; }
#nullable restore
#else
        public string ManagedDeviceId { get; set; }
#endif
        /// <summary>The Intune device name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ManagedDeviceName { get; set; }
#nullable restore
#else
        public string ManagedDeviceName { get; set; }
#endif
        /// <summary>The Azure network connection that is applied during the provisioning of Cloud PCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OnPremisesConnectionName { get; set; }
#nullable restore
#else
        public string OnPremisesConnectionName { get; set; }
#endif
        /// <summary>The version of the operating system (OS) to provision on Cloud PCs. Possible values are: windows10, windows11, unknownFutureValue.</summary>
        public global::ApiSdk.Models.CloudPcOperatingSystem? OsVersion { get; set; }
        /// <summary>The results of every partner agent&apos;s installation status on Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.CloudPcPartnerAgentInstallResult>? PartnerAgentInstallResults { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.CloudPcPartnerAgentInstallResult> PartnerAgentInstallResults { get; set; }
#endif
        /// <summary>The power state of a Cloud PC. The possible values are: running, poweredOff, unknown. This property only supports shift work Cloud PCs.</summary>
        public global::ApiSdk.Models.CloudPcPowerState? PowerState { get; set; }
        /// <summary>The provisioning policy ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProvisioningPolicyId { get; set; }
#nullable restore
#else
        public string ProvisioningPolicyId { get; set; }
#endif
        /// <summary>The provisioning policy that is applied during the provisioning of Cloud PCs.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ProvisioningPolicyName { get; set; }
#nullable restore
#else
        public string ProvisioningPolicyName { get; set; }
#endif
        /// <summary>The type of licenses to be used when provisioning Cloud PCs using this policy. Possible values are: dedicated, shared, unknownFutureValue,sharedByUser, sharedByEntraGroup. You must use the Prefer: include-unknown-enum-members request header to get the following values from this evolvable enum: sharedByUser, sharedByEntraGroup. The default value is dedicated. CAUTION: The shared member is deprecated and will stop returning on April 30, 2027ï¼› in the future, use the sharedByUser member.</summary>
        public global::ApiSdk.Models.CloudPcProvisioningType? ProvisioningType { get; set; }
        /// <summary>The scopeIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScopeIds { get; set; }
#nullable restore
#else
        public List<string> ScopeIds { get; set; }
#endif
        /// <summary>The service plan ID of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServicePlanId { get; set; }
#nullable restore
#else
        public string ServicePlanId { get; set; }
#endif
        /// <summary>The service plan name of the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ServicePlanName { get; set; }
#nullable restore
#else
        public string ServicePlanName { get; set; }
#endif
        /// <summary>The service plan type of the Cloud PC.</summary>
        public global::ApiSdk.Models.CloudPcServicePlanType? ServicePlanType { get; set; }
        /// <summary>The status property</summary>
        public global::ApiSdk.Models.CloudPcStatus? Status { get; set; }
        /// <summary>Indicates the detailed status associated with Cloud PC, including error/warning code, error/warning message, additionalInformation. For example, { &apos;code&apos;: &apos;internalServerError&apos;, &apos;message&apos;: &apos;There was an error during the Cloud PC upgrade. Please contact support.&apos;, &apos;additionalInformation&apos;: null }.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcStatusDetail? StatusDetail { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcStatusDetail StatusDetail { get; set; }
#endif
        /// <summary>The details of the Cloud PC status. For example, { &apos;code&apos;: &apos;internalServerError&apos;, &apos;message&apos;: &apos;There was an error during the Cloud PC upgrade. Please contact support.&apos;, &apos;additionalInformation&apos;: null }. This property is deprecated and will no longer be supported effective August 31, 2024. Use statusDetail instead.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcStatusDetails? StatusDetails { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcStatusDetails StatusDetails { get; set; }
#endif
        /// <summary>The account type of the user on provisioned Cloud PCs. Possible values are: standardUser, administrator, unknownFutureValue.</summary>
        public global::ApiSdk.Models.CloudPcUserAccountType? UserAccountType { get; set; }
        /// <summary>The user principal name (UPN) of the user assigned to the Cloud PC.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UserPrincipalName { get; set; }
#nullable restore
#else
        public string UserPrincipalName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CloudPC"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.CloudPC CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.CloudPC();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "aadDeviceId", n => { AadDeviceId = n.GetStringValue(); } },
                { "allotmentDisplayName", n => { AllotmentDisplayName = n.GetStringValue(); } },
                { "connectionSetting", n => { ConnectionSetting = n.GetObjectValue<global::ApiSdk.Models.CloudPcConnectionSetting>(global::ApiSdk.Models.CloudPcConnectionSetting.CreateFromDiscriminatorValue); } },
                { "connectionSettings", n => { ConnectionSettings = n.GetObjectValue<global::ApiSdk.Models.CloudPcConnectionSettings>(global::ApiSdk.Models.CloudPcConnectionSettings.CreateFromDiscriminatorValue); } },
                { "connectivityResult", n => { ConnectivityResult = n.GetObjectValue<global::ApiSdk.Models.CloudPcConnectivityResult>(global::ApiSdk.Models.CloudPcConnectivityResult.CreateFromDiscriminatorValue); } },
                { "deviceRegionName", n => { DeviceRegionName = n.GetStringValue(); } },
                { "disasterRecoveryCapability", n => { DisasterRecoveryCapability = n.GetObjectValue<global::ApiSdk.Models.CloudPcDisasterRecoveryCapability>(global::ApiSdk.Models.CloudPcDisasterRecoveryCapability.CreateFromDiscriminatorValue); } },
                { "diskEncryptionState", n => { DiskEncryptionState = n.GetEnumValue<global::ApiSdk.Models.CloudPcDiskEncryptionState>(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "frontlineCloudPcAvailability", n => { FrontlineCloudPcAvailability = n.GetEnumValue<global::ApiSdk.Models.FrontlineCloudPcAvailability>(); } },
                { "gracePeriodEndDateTime", n => { GracePeriodEndDateTime = n.GetDateTimeOffsetValue(); } },
                { "imageDisplayName", n => { ImageDisplayName = n.GetStringValue(); } },
                { "lastLoginResult", n => { LastLoginResult = n.GetObjectValue<global::ApiSdk.Models.CloudPcLoginResult>(global::ApiSdk.Models.CloudPcLoginResult.CreateFromDiscriminatorValue); } },
                { "lastModifiedDateTime", n => { LastModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "lastRemoteActionResult", n => { LastRemoteActionResult = n.GetObjectValue<global::ApiSdk.Models.CloudPcRemoteActionResult>(global::ApiSdk.Models.CloudPcRemoteActionResult.CreateFromDiscriminatorValue); } },
                { "managedDeviceId", n => { ManagedDeviceId = n.GetStringValue(); } },
                { "managedDeviceName", n => { ManagedDeviceName = n.GetStringValue(); } },
                { "onPremisesConnectionName", n => { OnPremisesConnectionName = n.GetStringValue(); } },
                { "osVersion", n => { OsVersion = n.GetEnumValue<global::ApiSdk.Models.CloudPcOperatingSystem>(); } },
                { "partnerAgentInstallResults", n => { PartnerAgentInstallResults = n.GetCollectionOfObjectValues<global::ApiSdk.Models.CloudPcPartnerAgentInstallResult>(global::ApiSdk.Models.CloudPcPartnerAgentInstallResult.CreateFromDiscriminatorValue)?.AsList(); } },
                { "powerState", n => { PowerState = n.GetEnumValue<global::ApiSdk.Models.CloudPcPowerState>(); } },
                { "provisioningPolicyId", n => { ProvisioningPolicyId = n.GetStringValue(); } },
                { "provisioningPolicyName", n => { ProvisioningPolicyName = n.GetStringValue(); } },
                { "provisioningType", n => { ProvisioningType = n.GetEnumValue<global::ApiSdk.Models.CloudPcProvisioningType>(); } },
                { "scopeIds", n => { ScopeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "servicePlanId", n => { ServicePlanId = n.GetStringValue(); } },
                { "servicePlanName", n => { ServicePlanName = n.GetStringValue(); } },
                { "servicePlanType", n => { ServicePlanType = n.GetEnumValue<global::ApiSdk.Models.CloudPcServicePlanType>(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.CloudPcStatus>(); } },
                { "statusDetail", n => { StatusDetail = n.GetObjectValue<global::ApiSdk.Models.CloudPcStatusDetail>(global::ApiSdk.Models.CloudPcStatusDetail.CreateFromDiscriminatorValue); } },
                { "statusDetails", n => { StatusDetails = n.GetObjectValue<global::ApiSdk.Models.CloudPcStatusDetails>(global::ApiSdk.Models.CloudPcStatusDetails.CreateFromDiscriminatorValue); } },
                { "userAccountType", n => { UserAccountType = n.GetEnumValue<global::ApiSdk.Models.CloudPcUserAccountType>(); } },
                { "userPrincipalName", n => { UserPrincipalName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("aadDeviceId", AadDeviceId);
            writer.WriteStringValue("allotmentDisplayName", AllotmentDisplayName);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcConnectionSetting>("connectionSetting", ConnectionSetting);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcConnectionSettings>("connectionSettings", ConnectionSettings);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcConnectivityResult>("connectivityResult", ConnectivityResult);
            writer.WriteStringValue("deviceRegionName", DeviceRegionName);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcDisasterRecoveryCapability>("disasterRecoveryCapability", DisasterRecoveryCapability);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcDiskEncryptionState>("diskEncryptionState", DiskEncryptionState);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteEnumValue<global::ApiSdk.Models.FrontlineCloudPcAvailability>("frontlineCloudPcAvailability", FrontlineCloudPcAvailability);
            writer.WriteDateTimeOffsetValue("gracePeriodEndDateTime", GracePeriodEndDateTime);
            writer.WriteStringValue("imageDisplayName", ImageDisplayName);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcLoginResult>("lastLoginResult", LastLoginResult);
            writer.WriteDateTimeOffsetValue("lastModifiedDateTime", LastModifiedDateTime);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcRemoteActionResult>("lastRemoteActionResult", LastRemoteActionResult);
            writer.WriteStringValue("managedDeviceId", ManagedDeviceId);
            writer.WriteStringValue("managedDeviceName", ManagedDeviceName);
            writer.WriteStringValue("onPremisesConnectionName", OnPremisesConnectionName);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcOperatingSystem>("osVersion", OsVersion);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.CloudPcPartnerAgentInstallResult>("partnerAgentInstallResults", PartnerAgentInstallResults);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcPowerState>("powerState", PowerState);
            writer.WriteStringValue("provisioningPolicyId", ProvisioningPolicyId);
            writer.WriteStringValue("provisioningPolicyName", ProvisioningPolicyName);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcProvisioningType>("provisioningType", ProvisioningType);
            writer.WriteCollectionOfPrimitiveValues<string>("scopeIds", ScopeIds);
            writer.WriteStringValue("servicePlanId", ServicePlanId);
            writer.WriteStringValue("servicePlanName", ServicePlanName);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcServicePlanType>("servicePlanType", ServicePlanType);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcStatus>("status", Status);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcStatusDetail>("statusDetail", StatusDetail);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcStatusDetails>("statusDetails", StatusDetails);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcUserAccountType>("userAccountType", UserAccountType);
            writer.WriteStringValue("userPrincipalName", UserPrincipalName);
        }
    }
}
#pragma warning restore CS0618
