// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Ediscovery
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CaseSettings : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The OCR (Optical Character Recognition) settings for the case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Ediscovery.OcrSettings? Ocr { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Ediscovery.OcrSettings Ocr { get; set; }
#endif
        /// <summary>The redundancy (near duplicate and email threading) detection settings for the case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Ediscovery.RedundancyDetectionSettings? RedundancyDetection { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Ediscovery.RedundancyDetectionSettings RedundancyDetection { get; set; }
#endif
        /// <summary>The article Modeling (Themes) settings for the case.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Ediscovery.TopicModelingSettings? TopicModeling { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Ediscovery.TopicModelingSettings TopicModeling { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Ediscovery.CaseSettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Ediscovery.CaseSettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Ediscovery.CaseSettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "ocr", n => { Ocr = n.GetObjectValue<global::ApiSdk.Models.Ediscovery.OcrSettings>(global::ApiSdk.Models.Ediscovery.OcrSettings.CreateFromDiscriminatorValue); } },
                { "redundancyDetection", n => { RedundancyDetection = n.GetObjectValue<global::ApiSdk.Models.Ediscovery.RedundancyDetectionSettings>(global::ApiSdk.Models.Ediscovery.RedundancyDetectionSettings.CreateFromDiscriminatorValue); } },
                { "topicModeling", n => { TopicModeling = n.GetObjectValue<global::ApiSdk.Models.Ediscovery.TopicModelingSettings>(global::ApiSdk.Models.Ediscovery.TopicModelingSettings.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::ApiSdk.Models.Ediscovery.OcrSettings>("ocr", Ocr);
            writer.WriteObjectValue<global::ApiSdk.Models.Ediscovery.RedundancyDetectionSettings>("redundancyDetection", RedundancyDetection);
            writer.WriteObjectValue<global::ApiSdk.Models.Ediscovery.TopicModelingSettings>("topicModeling", TopicModeling);
        }
    }
}
#pragma warning restore CS0618
