// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// iOS certificate profile base.
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class IosCertificateProfileBase : global::ApiSdk.Models.IosCertificateProfile, IParsable
    {
        /// <summary>Certificate Validity Period Options.</summary>
        public global::ApiSdk.Models.CertificateValidityPeriodScale? CertificateValidityPeriodScale { get; set; }
        /// <summary>Value for the Certificate Validity Period.</summary>
        public int? CertificateValidityPeriodValue { get; set; }
        /// <summary>Certificate renewal threshold percentage. Valid values 1 to 99</summary>
        public int? RenewalThresholdPercentage { get; set; }
        /// <summary>Certificate Subject Alternative Name type. Possible values are: none, emailAddress, userPrincipalName, customAzureADAttribute, domainNameService, universalResourceIdentifier.</summary>
        public global::ApiSdk.Models.SubjectAlternativeNameType? SubjectAlternativeNameType { get; set; }
        /// <summary>Subject Name Format Options for Apple devices.</summary>
        public global::ApiSdk.Models.AppleSubjectNameFormat? SubjectNameFormat { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.IosCertificateProfileBase"/> and sets the default values.
        /// </summary>
        public IosCertificateProfileBase() : base()
        {
            OdataType = "#microsoft.graph.iosCertificateProfileBase";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.IosCertificateProfileBase"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.IosCertificateProfileBase CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.iosPkcsCertificateProfile" => new global::ApiSdk.Models.IosPkcsCertificateProfile(),
                "#microsoft.graph.iosScepCertificateProfile" => new global::ApiSdk.Models.IosScepCertificateProfile(),
                _ => new global::ApiSdk.Models.IosCertificateProfileBase(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "certificateValidityPeriodScale", n => { CertificateValidityPeriodScale = n.GetEnumValue<global::ApiSdk.Models.CertificateValidityPeriodScale>(); } },
                { "certificateValidityPeriodValue", n => { CertificateValidityPeriodValue = n.GetIntValue(); } },
                { "renewalThresholdPercentage", n => { RenewalThresholdPercentage = n.GetIntValue(); } },
                { "subjectAlternativeNameType", n => { SubjectAlternativeNameType = n.GetEnumValue<global::ApiSdk.Models.SubjectAlternativeNameType>(); } },
                { "subjectNameFormat", n => { SubjectNameFormat = n.GetEnumValue<global::ApiSdk.Models.AppleSubjectNameFormat>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::ApiSdk.Models.CertificateValidityPeriodScale>("certificateValidityPeriodScale", CertificateValidityPeriodScale);
            writer.WriteIntValue("certificateValidityPeriodValue", CertificateValidityPeriodValue);
            writer.WriteIntValue("renewalThresholdPercentage", RenewalThresholdPercentage);
            writer.WriteEnumValue<global::ApiSdk.Models.SubjectAlternativeNameType>("subjectAlternativeNameType", SubjectAlternativeNameType);
            writer.WriteEnumValue<global::ApiSdk.Models.AppleSubjectNameFormat>("subjectNameFormat", SubjectNameFormat);
        }
    }
}
#pragma warning restore CS0618
