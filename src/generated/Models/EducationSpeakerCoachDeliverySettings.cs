// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EducationSpeakerCoachDeliverySettings : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Indicates whether the student should receive feedback on their filler words from the Speaker Coach.</summary>
        public bool? AreFillerWordsEnabled { get; set; }
        /// <summary>Indicates whether the student should receive feedback on their pace from the Speaker Coach.</summary>
        public bool? IsPaceEnabled { get; set; }
        /// <summary>Indicates whether the student should receive feedback on their pitch from the Speaker Coach.</summary>
        public bool? IsPitchEnabled { get; set; }
        /// <summary>Indicates whether the student should receive feedback on their pronunciation from the Speaker Coach. This is automatically enabled if isAiFeedbackEnabled is set to true on the educationSpeakerProgressResource, or if spokenLanguageLocale is set to a value besides en-US on the educationSpeakerProgressResource.</summary>
        public bool? IsPronunciationEnabled { get; set; }
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.EducationSpeakerCoachDeliverySettings"/> and sets the default values.
        /// </summary>
        public EducationSpeakerCoachDeliverySettings()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.EducationSpeakerCoachDeliverySettings"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.EducationSpeakerCoachDeliverySettings CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.EducationSpeakerCoachDeliverySettings();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "areFillerWordsEnabled", n => { AreFillerWordsEnabled = n.GetBoolValue(); } },
                { "isPaceEnabled", n => { IsPaceEnabled = n.GetBoolValue(); } },
                { "isPitchEnabled", n => { IsPitchEnabled = n.GetBoolValue(); } },
                { "isPronunciationEnabled", n => { IsPronunciationEnabled = n.GetBoolValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteBoolValue("areFillerWordsEnabled", AreFillerWordsEnabled);
            writer.WriteBoolValue("isPaceEnabled", IsPaceEnabled);
            writer.WriteBoolValue("isPitchEnabled", IsPitchEnabled);
            writer.WriteBoolValue("isPronunciationEnabled", IsPronunciationEnabled);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
