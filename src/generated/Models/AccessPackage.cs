// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class AccessPackage : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Read-only. Nullable. Supports $expand.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessPackageAssignmentPolicy>? AccessPackageAssignmentPolicies { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessPackageAssignmentPolicy> AccessPackageAssignmentPolicies { get; set; }
#endif
        /// <summary>The accessPackageCatalog property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.AccessPackageCatalog? AccessPackageCatalog { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.AccessPackageCatalog AccessPackageCatalog { get; set; }
#endif
        /// <summary>The accessPackageResourceRoleScopes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessPackageResourceRoleScope>? AccessPackageResourceRoleScopes { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessPackageResourceRoleScope> AccessPackageResourceRoleScopes { get; set; }
#endif
        /// <summary>The access packages that are incompatible with this package. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessPackage>? AccessPackagesIncompatibleWith { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessPackage> AccessPackagesIncompatibleWith { get; set; }
#endif
        /// <summary>Identifier of the access package catalog referencing this access package. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CatalogId { get; set; }
#nullable restore
#else
        public string CatalogId { get; set; }
#endif
        /// <summary>The userPrincipalName of the user or identity of the subject who created this resource. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CreatedBy { get; set; }
#nullable restore
#else
        public string CreatedBy { get; set; }
#endif
        /// <summary>The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>The description of the access package.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Description { get; set; }
#nullable restore
#else
        public string Description { get; set; }
#endif
        /// <summary>The display name of the access package. Supports $filter (eq, contains).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>The  access packages whose assigned users are ineligible to be assigned this access package.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.AccessPackage>? IncompatibleAccessPackages { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.AccessPackage> IncompatibleAccessPackages { get; set; }
#endif
        /// <summary>The groups whose members are ineligible to be assigned this access package.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.Group>? IncompatibleGroups { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.Group> IncompatibleGroups { get; set; }
#endif
        /// <summary>Indicates whether the access package is hidden from the requestor.</summary>
        public bool? IsHidden { get; set; }
        /// <summary>Indicates whether role scopes are visible.</summary>
        public bool? IsRoleScopesVisible { get; set; }
        /// <summary>The userPrincipalName of the user who last modified this resource. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ModifiedBy { get; set; }
#nullable restore
#else
        public string ModifiedBy { get; set; }
#endif
        /// <summary>The Timestamp type represents date and time information using ISO 8601 format and is always in UTC time. For example, midnight UTC on Jan 1, 2014 is 2014-01-01T00:00:00Z. Read-only.</summary>
        public DateTimeOffset? ModifiedDateTime { get; set; }
        /// <summary>The uniqueName property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? UniqueName { get; set; }
#nullable restore
#else
        public string UniqueName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.AccessPackage"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.AccessPackage CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.AccessPackage();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accessPackageAssignmentPolicies", n => { AccessPackageAssignmentPolicies = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessPackageAssignmentPolicy>(global::ApiSdk.Models.AccessPackageAssignmentPolicy.CreateFromDiscriminatorValue)?.AsList(); } },
                { "accessPackageCatalog", n => { AccessPackageCatalog = n.GetObjectValue<global::ApiSdk.Models.AccessPackageCatalog>(global::ApiSdk.Models.AccessPackageCatalog.CreateFromDiscriminatorValue); } },
                { "accessPackageResourceRoleScopes", n => { AccessPackageResourceRoleScopes = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessPackageResourceRoleScope>(global::ApiSdk.Models.AccessPackageResourceRoleScope.CreateFromDiscriminatorValue)?.AsList(); } },
                { "accessPackagesIncompatibleWith", n => { AccessPackagesIncompatibleWith = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessPackage>(global::ApiSdk.Models.AccessPackage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "catalogId", n => { CatalogId = n.GetStringValue(); } },
                { "createdBy", n => { CreatedBy = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "description", n => { Description = n.GetStringValue(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "incompatibleAccessPackages", n => { IncompatibleAccessPackages = n.GetCollectionOfObjectValues<global::ApiSdk.Models.AccessPackage>(global::ApiSdk.Models.AccessPackage.CreateFromDiscriminatorValue)?.AsList(); } },
                { "incompatibleGroups", n => { IncompatibleGroups = n.GetCollectionOfObjectValues<global::ApiSdk.Models.Group>(global::ApiSdk.Models.Group.CreateFromDiscriminatorValue)?.AsList(); } },
                { "isHidden", n => { IsHidden = n.GetBoolValue(); } },
                { "isRoleScopesVisible", n => { IsRoleScopesVisible = n.GetBoolValue(); } },
                { "modifiedBy", n => { ModifiedBy = n.GetStringValue(); } },
                { "modifiedDateTime", n => { ModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "uniqueName", n => { UniqueName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessPackageAssignmentPolicy>("accessPackageAssignmentPolicies", AccessPackageAssignmentPolicies);
            writer.WriteObjectValue<global::ApiSdk.Models.AccessPackageCatalog>("accessPackageCatalog", AccessPackageCatalog);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessPackageResourceRoleScope>("accessPackageResourceRoleScopes", AccessPackageResourceRoleScopes);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessPackage>("accessPackagesIncompatibleWith", AccessPackagesIncompatibleWith);
            writer.WriteStringValue("catalogId", CatalogId);
            writer.WriteStringValue("createdBy", CreatedBy);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("description", Description);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.AccessPackage>("incompatibleAccessPackages", IncompatibleAccessPackages);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.Group>("incompatibleGroups", IncompatibleGroups);
            writer.WriteBoolValue("isHidden", IsHidden);
            writer.WriteBoolValue("isRoleScopesVisible", IsRoleScopesVisible);
            writer.WriteStringValue("modifiedBy", ModifiedBy);
            writer.WriteDateTimeOffsetValue("modifiedDateTime", ModifiedDateTime);
            writer.WriteStringValue("uniqueName", UniqueName);
        }
    }
}
#pragma warning restore CS0618
