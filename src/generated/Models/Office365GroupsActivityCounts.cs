// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using Microsoft.Kiota.Abstractions;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class Office365GroupsActivityCounts : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The number of emails received by Group mailboxes.</summary>
        public long? ExchangeEmailsReceived { get; set; }
        /// <summary>The date on which a number of emails were sent to a group mailbox or a number of messages were posted, read, or liked in a Yammer group</summary>
        public Date? ReportDate { get; set; }
        /// <summary>The number of days the report covers.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ReportPeriod { get; set; }
#nullable restore
#else
        public string ReportPeriod { get; set; }
#endif
        /// <summary>The latest date of the content.</summary>
        public Date? ReportRefreshDate { get; set; }
        /// <summary>The number of channel messages in Teams team.</summary>
        public long? TeamsChannelMessages { get; set; }
        /// <summary>The number of meetings organized in Teams team.</summary>
        public long? TeamsMeetingsOrganized { get; set; }
        /// <summary>The number of messages liked in Yammer groups.</summary>
        public long? YammerMessagesLiked { get; set; }
        /// <summary>The number of messages posted to Yammer groups.</summary>
        public long? YammerMessagesPosted { get; set; }
        /// <summary>The number of messages read in Yammer groups.</summary>
        public long? YammerMessagesRead { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Office365GroupsActivityCounts"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Office365GroupsActivityCounts CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Office365GroupsActivityCounts();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "exchangeEmailsReceived", n => { ExchangeEmailsReceived = n.GetLongValue(); } },
                { "reportDate", n => { ReportDate = n.GetDateValue(); } },
                { "reportPeriod", n => { ReportPeriod = n.GetStringValue(); } },
                { "reportRefreshDate", n => { ReportRefreshDate = n.GetDateValue(); } },
                { "teamsChannelMessages", n => { TeamsChannelMessages = n.GetLongValue(); } },
                { "teamsMeetingsOrganized", n => { TeamsMeetingsOrganized = n.GetLongValue(); } },
                { "yammerMessagesLiked", n => { YammerMessagesLiked = n.GetLongValue(); } },
                { "yammerMessagesPosted", n => { YammerMessagesPosted = n.GetLongValue(); } },
                { "yammerMessagesRead", n => { YammerMessagesRead = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteLongValue("exchangeEmailsReceived", ExchangeEmailsReceived);
            writer.WriteDateValue("reportDate", ReportDate);
            writer.WriteStringValue("reportPeriod", ReportPeriod);
            writer.WriteDateValue("reportRefreshDate", ReportRefreshDate);
            writer.WriteLongValue("teamsChannelMessages", TeamsChannelMessages);
            writer.WriteLongValue("teamsMeetingsOrganized", TeamsMeetingsOrganized);
            writer.WriteLongValue("yammerMessagesLiked", YammerMessagesLiked);
            writer.WriteLongValue("yammerMessagesPosted", YammerMessagesPosted);
            writer.WriteLongValue("yammerMessagesRead", YammerMessagesRead);
        }
    }
}
#pragma warning restore CS0618
