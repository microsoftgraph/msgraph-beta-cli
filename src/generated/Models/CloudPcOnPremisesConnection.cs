// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPcOnPremisesConnection : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The fully qualified domain name (FQDN) of the Active Directory domain you want to join. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdDomainName { get; set; }
#nullable restore
#else
        public string AdDomainName { get; set; }
#endif
        /// <summary>The password associated with adDomainUsername.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdDomainPassword { get; set; }
#nullable restore
#else
        public string AdDomainPassword { get; set; }
#endif
        /// <summary>The username of an Active Directory account (user or service account) that has permissions to create computer objects in Active Directory. Required format: admin@contoso.com. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AdDomainUsername { get; set; }
#nullable restore
#else
        public string AdDomainUsername { get; set; }
#endif
        /// <summary>The interface URL of the partner service&apos;s resource that links to this Azure network connection. Returned only on $select.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? AlternateResourceUrl { get; set; }
#nullable restore
#else
        public string AlternateResourceUrl { get; set; }
#endif
        /// <summary>Specifies the method by which a provisioned Cloud PC is joined to Microsoft Entra. The azureADJoin option indicates the absence of an on-premises Active Directory (AD) in the current tenant that results in the Cloud PC device only joining to Microsoft Entra. The hybridAzureADJoin option indicates the presence of an on-premises AD in the current tenant and that the Cloud PC joins both the on-premises AD and Microsoft Entra. The selected option also determines the types of users who can be assigned and can sign into a Cloud PC. The azureADJoin option allows both cloud-only and hybrid users to be assigned and sign in, whereas hybridAzureADJoin is restricted to hybrid users only. The default value is hybridAzureADJoin. The possible values are: hybridAzureADJoin, azureADJoin, unknownFutureValue.</summary>
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionType? ConnectionType { get; set; }
        /// <summary>The display name for the Azure network connection.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; set; }
#nullable restore
#else
        public string DisplayName { get; set; }
#endif
        /// <summary>false if the regular health checks on the network/domain configuration are currently active. true if the checks are paused. If you perform a create or update operation on a onPremisesNetworkConnection resource, this value is set to false for 4 weeks. If you retry a health check on network/domain configuration, this value is set to false for two weeks. If the onPremisesNetworkConnection resource is attached in a provisioningPolicy or used by a Cloud PC in the past 4 weeks, healthCheckPaused is set to false. Read-only. Default is false.</summary>
        public bool? HealthCheckPaused { get; set; }
        /// <summary>The healthCheckStatus property</summary>
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionStatus? HealthCheckStatus { get; set; }
        /// <summary>Indicates the results of health checks performed on the on-premises connection. Returned only on $select. For an example that shows how to get the inUse property, see Example 2: Get the selected properties of an Azure network connection, including healthCheckStatusDetails. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetail? HealthCheckStatusDetail { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetail HealthCheckStatusDetail { get; set; }
#endif
        /// <summary>The details of the connection&apos;s health checks and the corresponding results. Returned only on $select. For an example that shows how to get the inUse property, see Example 2: Get the selected properties of an Azure network connection, including healthCheckStatusDetails. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetails? HealthCheckStatusDetails { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetails HealthCheckStatusDetails { get; set; }
#endif
        /// <summary>When true, the Azure network connection is in use. When false, the connection isn&apos;t in use. You can&apos;t delete a connection thatâ€™s in use. Returned only on $select. For an example that shows how to get the inUse property, see Example 2: Get the selected properties of an Azure network connection, including healthCheckStatusDetails. Read-only.</summary>
        public bool? InUse { get; set; }
        /// <summary>Indicates whether a Cloud PC is using this on-premises network connection. true if at least one Cloud PC is using it. Otherwise, false. Read-only. Default is false.</summary>
        public bool? InUseByCloudPc { get; set; }
        /// <summary>The managedBy property</summary>
        public global::ApiSdk.Models.CloudPcManagementService? ManagedBy { get; set; }
        /// <summary>The organizational unit (OU) in which the computer account is created. If left null, the OU configured as the default (a well-known computer object container) in your Active Directory domain (OU) is used. Optional.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OrganizationalUnit { get; set; }
#nullable restore
#else
        public string OrganizationalUnit { get; set; }
#endif
        /// <summary>The ID of the target resource group. Required format: /subscriptions/{subscription-id}/resourceGroups/{resourceGroupName}.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? ResourceGroupId { get; set; }
#nullable restore
#else
        public string ResourceGroupId { get; set; }
#endif
        /// <summary>The scopeIds property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? ScopeIds { get; set; }
#nullable restore
#else
        public List<string> ScopeIds { get; set; }
#endif
        /// <summary>The ID of the target subnet. Required format: /subscriptions/{subscription-id}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkId}/subnets/{subnetName}.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubnetId { get; set; }
#nullable restore
#else
        public string SubnetId { get; set; }
#endif
        /// <summary>The ID of the target Azure subscription associated with your tenant.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriptionId { get; set; }
#nullable restore
#else
        public string SubscriptionId { get; set; }
#endif
        /// <summary>The name of the target Azure subscription. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? SubscriptionName { get; set; }
#nullable restore
#else
        public string SubscriptionName { get; set; }
#endif
        /// <summary>Specifies the method by which a provisioned Cloud PC is joined to Microsoft Entra. The azureADJoin option indicates the absence of an on-premises Active Directory (AD) in the current tenant that results in the Cloud PC device only joining to Microsoft Entra. The hybridAzureADJoin option indicates the presence of an on-premises AD in the current tenant and that the Cloud PC joins both the on-premises AD and Microsoft Entra. The selected option also determines the types of users who can be assigned and can sign into a Cloud PC. The azureADJoin option allows both cloud-only and hybrid users to be assigned and sign in, whereas hybridAzureADJoin is restricted to hybrid users only. The default value is hybridAzureADJoin. The possible values are: hybridAzureADJoin, azureADJoin, unknownFutureValue. The type property is deprecated and stopped returning data on January 31, 2024. Going forward, use the connectionType property.</summary>
        public global::ApiSdk.Models.CloudPcOnPremisesConnectionType? Type { get; set; }
        /// <summary>The ID of the target virtual network. Required format: /subscriptions/{subscription-id}/resourceGroups/{resourceGroupName}/providers/Microsoft.Network/virtualNetworks/{virtualNetworkName}.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VirtualNetworkId { get; set; }
#nullable restore
#else
        public string VirtualNetworkId { get; set; }
#endif
        /// <summary>Indicates the resource location of the virtual target network. Read-only, computed value.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? VirtualNetworkLocation { get; set; }
#nullable restore
#else
        public string VirtualNetworkLocation { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CloudPcOnPremisesConnection"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.CloudPcOnPremisesConnection CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.CloudPcOnPremisesConnection();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "adDomainName", n => { AdDomainName = n.GetStringValue(); } },
                { "adDomainPassword", n => { AdDomainPassword = n.GetStringValue(); } },
                { "adDomainUsername", n => { AdDomainUsername = n.GetStringValue(); } },
                { "alternateResourceUrl", n => { AlternateResourceUrl = n.GetStringValue(); } },
                { "connectionType", n => { ConnectionType = n.GetEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionType>(); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "healthCheckPaused", n => { HealthCheckPaused = n.GetBoolValue(); } },
                { "healthCheckStatus", n => { HealthCheckStatus = n.GetEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatus>(); } },
                { "healthCheckStatusDetail", n => { HealthCheckStatusDetail = n.GetObjectValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetail>(global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetail.CreateFromDiscriminatorValue); } },
                { "healthCheckStatusDetails", n => { HealthCheckStatusDetails = n.GetObjectValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetails>(global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetails.CreateFromDiscriminatorValue); } },
                { "inUse", n => { InUse = n.GetBoolValue(); } },
                { "inUseByCloudPc", n => { InUseByCloudPc = n.GetBoolValue(); } },
                { "managedBy", n => { ManagedBy = n.GetEnumValue<global::ApiSdk.Models.CloudPcManagementService>(); } },
                { "organizationalUnit", n => { OrganizationalUnit = n.GetStringValue(); } },
                { "resourceGroupId", n => { ResourceGroupId = n.GetStringValue(); } },
                { "scopeIds", n => { ScopeIds = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "subnetId", n => { SubnetId = n.GetStringValue(); } },
                { "subscriptionId", n => { SubscriptionId = n.GetStringValue(); } },
                { "subscriptionName", n => { SubscriptionName = n.GetStringValue(); } },
                { "type", n => { Type = n.GetEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionType>(); } },
                { "virtualNetworkId", n => { VirtualNetworkId = n.GetStringValue(); } },
                { "virtualNetworkLocation", n => { VirtualNetworkLocation = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteStringValue("adDomainName", AdDomainName);
            writer.WriteStringValue("adDomainPassword", AdDomainPassword);
            writer.WriteStringValue("adDomainUsername", AdDomainUsername);
            writer.WriteStringValue("alternateResourceUrl", AlternateResourceUrl);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionType>("connectionType", ConnectionType);
            writer.WriteStringValue("displayName", DisplayName);
            writer.WriteBoolValue("healthCheckPaused", HealthCheckPaused);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatus>("healthCheckStatus", HealthCheckStatus);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetail>("healthCheckStatusDetail", HealthCheckStatusDetail);
            writer.WriteObjectValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionStatusDetails>("healthCheckStatusDetails", HealthCheckStatusDetails);
            writer.WriteBoolValue("inUse", InUse);
            writer.WriteBoolValue("inUseByCloudPc", InUseByCloudPc);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcManagementService>("managedBy", ManagedBy);
            writer.WriteStringValue("organizationalUnit", OrganizationalUnit);
            writer.WriteStringValue("resourceGroupId", ResourceGroupId);
            writer.WriteCollectionOfPrimitiveValues<string>("scopeIds", ScopeIds);
            writer.WriteStringValue("subnetId", SubnetId);
            writer.WriteStringValue("subscriptionId", SubscriptionId);
            writer.WriteStringValue("subscriptionName", SubscriptionName);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcOnPremisesConnectionType>("type", Type);
            writer.WriteStringValue("virtualNetworkId", VirtualNetworkId);
            writer.WriteStringValue("virtualNetworkLocation", VirtualNetworkLocation);
        }
    }
}
#pragma warning restore CS0618
