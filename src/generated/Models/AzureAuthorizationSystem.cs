// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models
{
    #pragma warning disable CS1591
    public class AzureAuthorizationSystem : AuthorizationSystem, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>List of actions for service in authorization system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AzureAuthorizationSystemTypeAction>? Actions { get; set; }
#nullable restore
#else
        public List<AzureAuthorizationSystemTypeAction> Actions { get; set; }
#endif
        /// <summary>Identities in the authorization system.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AzureAssociatedIdentities? AssociatedIdentities { get; set; }
#nullable restore
#else
        public AzureAssociatedIdentities AssociatedIdentities { get; set; }
#endif
        /// <summary>Resources associated with the authorization system type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AzureAuthorizationSystemResource>? Resources { get; set; }
#nullable restore
#else
        public List<AzureAuthorizationSystemResource> Resources { get; set; }
#endif
        /// <summary>Roles associated with the authorization system type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AzureRoleDefinition>? RoleDefinitions { get; set; }
#nullable restore
#else
        public List<AzureRoleDefinition> RoleDefinitions { get; set; }
#endif
        /// <summary>Services associated with the authorization system type.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AuthorizationSystemTypeService>? Services { get; set; }
#nullable restore
#else
        public List<AuthorizationSystemTypeService> Services { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="AzureAuthorizationSystem"/> and sets the default values.
        /// </summary>
        public AzureAuthorizationSystem() : base()
        {
            OdataType = "#microsoft.graph.azureAuthorizationSystem";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="AzureAuthorizationSystem"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new AzureAuthorizationSystem CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AzureAuthorizationSystem();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "actions", n => { Actions = n.GetCollectionOfObjectValues<AzureAuthorizationSystemTypeAction>(AzureAuthorizationSystemTypeAction.CreateFromDiscriminatorValue)?.ToList(); } },
                { "associatedIdentities", n => { AssociatedIdentities = n.GetObjectValue<AzureAssociatedIdentities>(AzureAssociatedIdentities.CreateFromDiscriminatorValue); } },
                { "resources", n => { Resources = n.GetCollectionOfObjectValues<AzureAuthorizationSystemResource>(AzureAuthorizationSystemResource.CreateFromDiscriminatorValue)?.ToList(); } },
                { "roleDefinitions", n => { RoleDefinitions = n.GetCollectionOfObjectValues<AzureRoleDefinition>(AzureRoleDefinition.CreateFromDiscriminatorValue)?.ToList(); } },
                { "services", n => { Services = n.GetCollectionOfObjectValues<AuthorizationSystemTypeService>(AuthorizationSystemTypeService.CreateFromDiscriminatorValue)?.ToList(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<AzureAuthorizationSystemTypeAction>("actions", Actions);
            writer.WriteObjectValue<AzureAssociatedIdentities>("associatedIdentities", AssociatedIdentities);
            writer.WriteCollectionOfObjectValues<AzureAuthorizationSystemResource>("resources", Resources);
            writer.WriteCollectionOfObjectValues<AzureRoleDefinition>("roleDefinitions", RoleDefinitions);
            writer.WriteCollectionOfObjectValues<AuthorizationSystemTypeService>("services", Services);
        }
    }
}
