// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class ProcessContentMetadataBase : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Represents the actual content, either as text (textContent) or binary data (binaryContent). Optional if metadata alone is sufficient for policy evaluation. Do not use for contentActivities.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.ContentBase? Content { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.ContentBase Content { get; set; }
#endif
        /// <summary>An GUID identifier used to group multiple related content entries (for example, different parts of the same file upload, messages in a conversation).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? CorrelationId { get; set; }
#nullable restore
#else
        public string CorrelationId { get; set; }
#endif
        /// <summary>Required. Timestamp indicating when the original content was created (for example, file creation time, message sent time).</summary>
        public DateTimeOffset? CreatedDateTime { get; set; }
        /// <summary>Required. A unique identifier for this specific content entry within the context of the calling application or enforcement plane (for example, message ID, file path/URL).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Identifier { get; set; }
#nullable restore
#else
        public string Identifier { get; set; }
#endif
        /// <summary>Required. Indicates if the provided content has been truncated from its original form (for example, due to size limits).</summary>
        public bool? IsTruncated { get; set; }
        /// <summary>The length of the original content in bytes.</summary>
        public long? Length { get; set; }
        /// <summary>Required. Timestamp indicating when the original content was last modified. For ephemeral content like messages, this might be the same as createdDateTime.</summary>
        public DateTimeOffset? ModifiedDateTime { get; set; }
        /// <summary>Required. A descriptive name for the content (for example, file name, web page title, &apos;Chat Message&apos;).</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? Name { get; set; }
#nullable restore
#else
        public string Name { get; set; }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>A sequence number indicating the order in which content was generated or should be processed, required when correlationId is used.</summary>
        public long? SequenceNumber { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.ProcessContentMetadataBase"/> and sets the default values.
        /// </summary>
        public ProcessContentMetadataBase()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.ProcessContentMetadataBase"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.ProcessContentMetadataBase CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.processConversationMetadata" => new global::ApiSdk.Models.ProcessConversationMetadata(),
                "#microsoft.graph.processFileMetadata" => new global::ApiSdk.Models.ProcessFileMetadata(),
                _ => new global::ApiSdk.Models.ProcessContentMetadataBase(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "content", n => { Content = n.GetObjectValue<global::ApiSdk.Models.ContentBase>(global::ApiSdk.Models.ContentBase.CreateFromDiscriminatorValue); } },
                { "correlationId", n => { CorrelationId = n.GetStringValue(); } },
                { "createdDateTime", n => { CreatedDateTime = n.GetDateTimeOffsetValue(); } },
                { "identifier", n => { Identifier = n.GetStringValue(); } },
                { "isTruncated", n => { IsTruncated = n.GetBoolValue(); } },
                { "length", n => { Length = n.GetLongValue(); } },
                { "modifiedDateTime", n => { ModifiedDateTime = n.GetDateTimeOffsetValue(); } },
                { "name", n => { Name = n.GetStringValue(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "sequenceNumber", n => { SequenceNumber = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ApiSdk.Models.ContentBase>("content", Content);
            writer.WriteStringValue("correlationId", CorrelationId);
            writer.WriteDateTimeOffsetValue("createdDateTime", CreatedDateTime);
            writer.WriteStringValue("identifier", Identifier);
            writer.WriteBoolValue("isTruncated", IsTruncated);
            writer.WriteLongValue("length", Length);
            writer.WriteDateTimeOffsetValue("modifiedDateTime", ModifiedDateTime);
            writer.WriteStringValue("name", Name);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteLongValue("sequenceNumber", SequenceNumber);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
