// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.IndustryData
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class IndustryDataRunActivity : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The flow that was run by this activity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.IndustryData.IndustryDataActivity? Activity { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.IndustryData.IndustryDataActivity Activity { get; set; }
#endif
        /// <summary>An error object to diagnose critical failures in an activity.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.PublicError? BlockingError { get; private set; }
#nullable restore
#else
        public global::ApiSdk.Models.PublicError BlockingError { get; private set; }
#endif
        /// <summary>The name of the running flow.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DisplayName { get; private set; }
#nullable restore
#else
        public string DisplayName { get; private set; }
#endif
        /// <summary>The status property</summary>
        public global::ApiSdk.Models.IndustryData.IndustryDataActivityStatus? Status { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.IndustryData.IndustryDataRunActivity"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.IndustryData.IndustryDataRunActivity CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.industryData.inboundFlowActivity" => new global::ApiSdk.Models.IndustryData.InboundFlowActivity(),
                "#microsoft.graph.industryData.outboundFlowActivity" => new global::ApiSdk.Models.IndustryData.OutboundFlowActivity(),
                _ => new global::ApiSdk.Models.IndustryData.IndustryDataRunActivity(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "activity", n => { Activity = n.GetObjectValue<global::ApiSdk.Models.IndustryData.IndustryDataActivity>(global::ApiSdk.Models.IndustryData.IndustryDataActivity.CreateFromDiscriminatorValue); } },
                { "blockingError", n => { BlockingError = n.GetObjectValue<global::ApiSdk.Models.PublicError>(global::ApiSdk.Models.PublicError.CreateFromDiscriminatorValue); } },
                { "displayName", n => { DisplayName = n.GetStringValue(); } },
                { "status", n => { Status = n.GetEnumValue<global::ApiSdk.Models.IndustryData.IndustryDataActivityStatus>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteObjectValue<global::ApiSdk.Models.IndustryData.IndustryDataActivity>("activity", Activity);
            writer.WriteEnumValue<global::ApiSdk.Models.IndustryData.IndustryDataActivityStatus>("status", Status);
        }
    }
}
#pragma warning restore CS0618
