// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models
{
    #pragma warning disable CS1591
    public class AwsStatement : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The AWS actions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Actions { get; set; }
#nullable restore
#else
        public List<string> Actions { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>The AWS conditions associated with the statement.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public AwsCondition? Condition { get; set; }
#nullable restore
#else
        public AwsCondition Condition { get; set; }
#endif
        /// <summary>The effect property</summary>
        public AwsStatementEffect? Effect { get; set; }
        /// <summary>AWS Not Actions</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? NotActions { get; set; }
#nullable restore
#else
        public List<string> NotActions { get; set; }
#endif
        /// <summary>AWS Not Resources</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? NotResources { get; set; }
#nullable restore
#else
        public List<string> NotResources { get; set; }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>The AWS resources associated with the statement.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? Resources { get; set; }
#nullable restore
#else
        public List<string> Resources { get; set; }
#endif
        /// <summary>The ID of the AWS statement.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StatementId { get; set; }
#nullable restore
#else
        public string StatementId { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="AwsStatement"/> and sets the default values.
        /// </summary>
        public AwsStatement()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="AwsStatement"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static AwsStatement CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AwsStatement();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "actions", n => { Actions = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "condition", n => { Condition = n.GetObjectValue<AwsCondition>(AwsCondition.CreateFromDiscriminatorValue); } },
                { "effect", n => { Effect = n.GetEnumValue<AwsStatementEffect>(); } },
                { "notActions", n => { NotActions = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "notResources", n => { NotResources = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "resources", n => { Resources = n.GetCollectionOfPrimitiveValues<string>()?.ToList(); } },
                { "statementId", n => { StatementId = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteCollectionOfPrimitiveValues<string>("actions", Actions);
            writer.WriteObjectValue<AwsCondition>("condition", Condition);
            writer.WriteEnumValue<AwsStatementEffect>("effect", Effect);
            writer.WriteCollectionOfPrimitiveValues<string>("notActions", NotActions);
            writer.WriteCollectionOfPrimitiveValues<string>("notResources", NotResources);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteCollectionOfPrimitiveValues<string>("resources", Resources);
            writer.WriteStringValue("statementId", StatementId);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
