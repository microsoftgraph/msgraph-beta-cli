// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class DetectedSensitiveContent : global::ApiSdk.Models.DetectedSensitiveContentBase, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The classificationAttributes property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.ClassificationAttribute>? ClassificationAttributes { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.ClassificationAttribute> ClassificationAttributes { get; set; }
#endif
        /// <summary>The classificationMethod property</summary>
        public global::ApiSdk.Models.ClassificationMethod? ClassificationMethod { get; set; }
        /// <summary>The matches property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<global::ApiSdk.Models.SensitiveContentLocation>? Matches { get; set; }
#nullable restore
#else
        public List<global::ApiSdk.Models.SensitiveContentLocation> Matches { get; set; }
#endif
        /// <summary>The scope property</summary>
        public global::ApiSdk.Models.SensitiveTypeScope? Scope { get; set; }
        /// <summary>The sensitiveTypeSource property</summary>
        public global::ApiSdk.Models.SensitiveTypeSource? SensitiveTypeSource { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.DetectedSensitiveContent"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.DetectedSensitiveContent CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            var mappingValue = parseNode.GetChildNode("@odata.type")?.GetStringValue();
            return mappingValue switch
            {
                "#microsoft.graph.machineLearningDetectedSensitiveContent" => new global::ApiSdk.Models.MachineLearningDetectedSensitiveContent(),
                _ => new global::ApiSdk.Models.DetectedSensitiveContent(),
            };
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "classificationAttributes", n => { ClassificationAttributes = n.GetCollectionOfObjectValues<global::ApiSdk.Models.ClassificationAttribute>(global::ApiSdk.Models.ClassificationAttribute.CreateFromDiscriminatorValue)?.AsList(); } },
                { "classificationMethod", n => { ClassificationMethod = n.GetEnumValue<global::ApiSdk.Models.ClassificationMethod>(); } },
                { "matches", n => { Matches = n.GetCollectionOfObjectValues<global::ApiSdk.Models.SensitiveContentLocation>(global::ApiSdk.Models.SensitiveContentLocation.CreateFromDiscriminatorValue)?.AsList(); } },
                { "scope", n => { Scope = n.GetEnumValue<global::ApiSdk.Models.SensitiveTypeScope>(); } },
                { "sensitiveTypeSource", n => { SensitiveTypeSource = n.GetEnumValue<global::ApiSdk.Models.SensitiveTypeSource>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.ClassificationAttribute>("classificationAttributes", ClassificationAttributes);
            writer.WriteEnumValue<global::ApiSdk.Models.ClassificationMethod>("classificationMethod", ClassificationMethod);
            writer.WriteCollectionOfObjectValues<global::ApiSdk.Models.SensitiveContentLocation>("matches", Matches);
            writer.WriteEnumValue<global::ApiSdk.Models.SensitiveTypeScope>("scope", Scope);
            writer.WriteEnumValue<global::ApiSdk.Models.SensitiveTypeSource>("sensitiveTypeSource", SensitiveTypeSource);
        }
    }
}
#pragma warning restore CS0618
