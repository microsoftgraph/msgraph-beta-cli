// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models.Ediscovery
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class EstimateStatisticsOperation : global::ApiSdk.Models.Ediscovery.CaseOperation, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>The estimated count of items for the sourceCollection that matched the content query.</summary>
        public long? IndexedItemCount { get; set; }
        /// <summary>The estimated size of items for the sourceCollection that matched the content query.</summary>
        public long? IndexedItemsSize { get; set; }
        /// <summary>The number of mailboxes that had search hits.</summary>
        public int? MailboxCount { get; set; }
        /// <summary>The number of mailboxes that had search hits.</summary>
        public int? SiteCount { get; set; }
        /// <summary>eDiscovery collection, commonly known as a search.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.Ediscovery.SourceCollection? SourceCollection { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.Ediscovery.SourceCollection SourceCollection { get; set; }
#endif
        /// <summary>The estimated count of unindexed items for the collection.</summary>
        public long? UnindexedItemCount { get; set; }
        /// <summary>The estimated size of unindexed items for the collection.</summary>
        public long? UnindexedItemsSize { get; set; }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.Ediscovery.EstimateStatisticsOperation"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.Ediscovery.EstimateStatisticsOperation CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.Ediscovery.EstimateStatisticsOperation();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "indexedItemCount", n => { IndexedItemCount = n.GetLongValue(); } },
                { "indexedItemsSize", n => { IndexedItemsSize = n.GetLongValue(); } },
                { "mailboxCount", n => { MailboxCount = n.GetIntValue(); } },
                { "siteCount", n => { SiteCount = n.GetIntValue(); } },
                { "sourceCollection", n => { SourceCollection = n.GetObjectValue<global::ApiSdk.Models.Ediscovery.SourceCollection>(global::ApiSdk.Models.Ediscovery.SourceCollection.CreateFromDiscriminatorValue); } },
                { "unindexedItemCount", n => { UnindexedItemCount = n.GetLongValue(); } },
                { "unindexedItemsSize", n => { UnindexedItemsSize = n.GetLongValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteLongValue("indexedItemCount", IndexedItemCount);
            writer.WriteLongValue("indexedItemsSize", IndexedItemsSize);
            writer.WriteIntValue("mailboxCount", MailboxCount);
            writer.WriteIntValue("siteCount", SiteCount);
            writer.WriteObjectValue<global::ApiSdk.Models.Ediscovery.SourceCollection>("sourceCollection", SourceCollection);
            writer.WriteLongValue("unindexedItemCount", UnindexedItemCount);
            writer.WriteLongValue("unindexedItemsSize", UnindexedItemsSize);
        }
    }
}
#pragma warning restore CS0618
