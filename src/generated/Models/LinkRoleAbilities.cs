// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class LinkRoleAbilities : IAdditionalDataHolder, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Indicates if the current user can add existing external user recipients to this sharing link.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? AddExistingExternalUsers { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus AddExistingExternalUsers { get; set; }
#endif
        /// <summary>Stores additional data not described in the OpenAPI description found when deserializing. Can be used for serialization as well.</summary>
        public IDictionary<string, object> AdditionalData { get; set; }
        /// <summary>Indicates if the current user can add new external user recipients to this sharing link.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? AddNewExternalUsers { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus AddNewExternalUsers { get; set; }
#endif
        /// <summary>Indicates the status of the potential sharing link variants. If selected, it generates a separate sharing link from the sharing link that would otherwise be generated without the variant, yet with an identical role and scope.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingLinkVariants? ApplyVariants { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingLinkVariants ApplyVariants { get; set; }
#endif
        /// <summary>Indicates if links of this role can be created.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? CreateLink { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus CreateLink { get; set; }
#endif
        /// <summary>Indicates if links of this role can be deleted.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? DeleteLink { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus DeleteLink { get; set; }
#endif
        /// <summary>Indicates if this link can include external users.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? LinkAllowsExternalUsers { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus LinkAllowsExternalUsers { get; set; }
#endif
        /// <summary>Indicates if links must expire, meaning the link is no longer usable after a specified time. If link expiration is enabled, a default link expiration time is provided.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingLinkExpirationStatus? LinkExpiration { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingLinkExpirationStatus LinkExpiration { get; set; }
#endif
        /// <summary>The OdataType property</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? OdataType { get; set; }
#nullable restore
#else
        public string OdataType { get; set; }
#endif
        /// <summary>Indicates if links of this role can be retrieved.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? RetrieveLink { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus RetrieveLink { get; set; }
#endif
        /// <summary>Indicates if links of this role can be updated.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public global::ApiSdk.Models.SharingOperationStatus? UpdateLink { get; set; }
#nullable restore
#else
        public global::ApiSdk.Models.SharingOperationStatus UpdateLink { get; set; }
#endif
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.LinkRoleAbilities"/> and sets the default values.
        /// </summary>
        public LinkRoleAbilities()
        {
            AdditionalData = new Dictionary<string, object>();
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.LinkRoleAbilities"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static global::ApiSdk.Models.LinkRoleAbilities CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.LinkRoleAbilities();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public virtual IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>
            {
                { "addExistingExternalUsers", n => { AddExistingExternalUsers = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "addNewExternalUsers", n => { AddNewExternalUsers = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "applyVariants", n => { ApplyVariants = n.GetObjectValue<global::ApiSdk.Models.SharingLinkVariants>(global::ApiSdk.Models.SharingLinkVariants.CreateFromDiscriminatorValue); } },
                { "createLink", n => { CreateLink = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "deleteLink", n => { DeleteLink = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "linkAllowsExternalUsers", n => { LinkAllowsExternalUsers = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "linkExpiration", n => { LinkExpiration = n.GetObjectValue<global::ApiSdk.Models.SharingLinkExpirationStatus>(global::ApiSdk.Models.SharingLinkExpirationStatus.CreateFromDiscriminatorValue); } },
                { "@odata.type", n => { OdataType = n.GetStringValue(); } },
                { "retrieveLink", n => { RetrieveLink = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
                { "updateLink", n => { UpdateLink = n.GetObjectValue<global::ApiSdk.Models.SharingOperationStatus>(global::ApiSdk.Models.SharingOperationStatus.CreateFromDiscriminatorValue); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public virtual void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("addExistingExternalUsers", AddExistingExternalUsers);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("addNewExternalUsers", AddNewExternalUsers);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingLinkVariants>("applyVariants", ApplyVariants);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("createLink", CreateLink);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("deleteLink", DeleteLink);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("linkAllowsExternalUsers", LinkAllowsExternalUsers);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingLinkExpirationStatus>("linkExpiration", LinkExpiration);
            writer.WriteStringValue("@odata.type", OdataType);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("retrieveLink", RetrieveLink);
            writer.WriteObjectValue<global::ApiSdk.Models.SharingOperationStatus>("updateLink", UpdateLink);
            writer.WriteAdditionalData(AdditionalData);
        }
    }
}
#pragma warning restore CS0618
