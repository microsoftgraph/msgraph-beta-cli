// <auto-generated/>
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System.Linq;
using System;
namespace ApiSdk.Models {
    /// <summary>
    /// Contains properties, inherited properties and actions for Android Enterprise mobile app configurations.
    /// </summary>
    public class AndroidManagedStoreAppConfiguration : ManagedDeviceMobileAppConfiguration, IParsable 
    {
        /// <summary>Whether or not this AppConfig is an OEMConfig policy. This property is read-only.</summary>
        public bool? AppSupportsOemConfig { get; private set; }
        /// <summary>Setting to specify whether to allow ConnectedApps experience for this app.</summary>
        public bool? ConnectedAppsEnabled { get; set; }
        /// <summary>Android Enterprise app configuration package id.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PackageId { get; set; }
#nullable restore
#else
        public string PackageId { get; set; }
#endif
        /// <summary>Android Enterprise app configuration JSON payload.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? PayloadJson { get; set; }
#nullable restore
#else
        public string PayloadJson { get; set; }
#endif
        /// <summary>List of Android app permissions and corresponding permission actions.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<AndroidPermissionAction>? PermissionActions { get; set; }
#nullable restore
#else
        public List<AndroidPermissionAction> PermissionActions { get; set; }
#endif
        /// <summary>Android profile applicability</summary>
        public AndroidProfileApplicability? ProfileApplicability { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="AndroidManagedStoreAppConfiguration"/> and sets the default values.
        /// </summary>
        public AndroidManagedStoreAppConfiguration() : base()
        {
            OdataType = "#microsoft.graph.androidManagedStoreAppConfiguration";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="AndroidManagedStoreAppConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new AndroidManagedStoreAppConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new AndroidManagedStoreAppConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                {"appSupportsOemConfig", n => { AppSupportsOemConfig = n.GetBoolValue(); } },
                {"connectedAppsEnabled", n => { ConnectedAppsEnabled = n.GetBoolValue(); } },
                {"packageId", n => { PackageId = n.GetStringValue(); } },
                {"payloadJson", n => { PayloadJson = n.GetStringValue(); } },
                {"permissionActions", n => { PermissionActions = n.GetCollectionOfObjectValues<AndroidPermissionAction>(AndroidPermissionAction.CreateFromDiscriminatorValue)?.ToList(); } },
                {"profileApplicability", n => { ProfileApplicability = n.GetEnumValue<AndroidProfileApplicability>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteBoolValue("connectedAppsEnabled", ConnectedAppsEnabled);
            writer.WriteStringValue("packageId", PackageId);
            writer.WriteStringValue("payloadJson", PayloadJson);
            writer.WriteCollectionOfObjectValues<AndroidPermissionAction>("permissionActions", PermissionActions);
            writer.WriteEnumValue<AndroidProfileApplicability>("profileApplicability", ProfileApplicability);
        }
    }
}
