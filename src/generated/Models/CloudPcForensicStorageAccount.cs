// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    #pragma warning disable CS1591
    public partial class CloudPcForensicStorageAccount : global::ApiSdk.Models.Entity, IParsable
    #pragma warning restore CS1591
    {
        /// <summary>Indicates the access tier of the storage account. Possible values are hot, cool, premium, cold, and unknownFutureValue. Default value is hot. Read-only.</summary>
        public global::ApiSdk.Models.CloudPcStorageAccountAccessTier? AccessTier { get; set; }
        /// <summary>Indicates whether immutability policies are configured for the storage account. When true, the storage account only accepts hot as the snapshot access tier. When false, the storage account accepts all valid access tiers. Read-Only.</summary>
        public bool? ImmutableStorage { get; set; }
        /// <summary>Indicates the ID of the storage account. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StorageAccountId { get; set; }
#nullable restore
#else
        public string StorageAccountId { get; set; }
#endif
        /// <summary>Indicates the name of the storage account. Read-only.</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? StorageAccountName { get; set; }
#nullable restore
#else
        public string StorageAccountName { get; set; }
#endif
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.CloudPcForensicStorageAccount"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.CloudPcForensicStorageAccount CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.CloudPcForensicStorageAccount();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "accessTier", n => { AccessTier = n.GetEnumValue<global::ApiSdk.Models.CloudPcStorageAccountAccessTier>(); } },
                { "immutableStorage", n => { ImmutableStorage = n.GetBoolValue(); } },
                { "storageAccountId", n => { StorageAccountId = n.GetStringValue(); } },
                { "storageAccountName", n => { StorageAccountName = n.GetStringValue(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::ApiSdk.Models.CloudPcStorageAccountAccessTier>("accessTier", AccessTier);
            writer.WriteBoolValue("immutableStorage", ImmutableStorage);
            writer.WriteStringValue("storageAccountId", StorageAccountId);
            writer.WriteStringValue("storageAccountName", StorageAccountName);
        }
    }
}
#pragma warning restore CS0618
