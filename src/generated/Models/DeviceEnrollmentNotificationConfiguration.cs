// <auto-generated/>
#pragma warning disable CS0618
using Microsoft.Kiota.Abstractions.Extensions;
using Microsoft.Kiota.Abstractions.Serialization;
using System.Collections.Generic;
using System.IO;
using System;
namespace ApiSdk.Models
{
    /// <summary>
    /// Enrollment Notification Configuration which is used to send notification
    /// </summary>
    [global::System.CodeDom.Compiler.GeneratedCode("Kiota", "1.0.0")]
    public partial class DeviceEnrollmentNotificationConfiguration : global::ApiSdk.Models.DeviceEnrollmentConfiguration, IParsable
    {
        /// <summary>Branding Options for the Message Template. Branding is defined in the Intune Admin Console.</summary>
        public global::ApiSdk.Models.EnrollmentNotificationBrandingOptions? BrandingOptions { get; set; }
        /// <summary>DefaultLocale for the Enrollment Notification</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public string? DefaultLocale { get; set; }
#nullable restore
#else
        public string DefaultLocale { get; set; }
#endif
        /// <summary>Notification Message Template Id</summary>
        public Guid? NotificationMessageTemplateId { get; set; }
        /// <summary>The list of notification data -</summary>
#if NETSTANDARD2_1_OR_GREATER || NETCOREAPP3_1_OR_GREATER
#nullable enable
        public List<string>? NotificationTemplates { get; set; }
#nullable restore
#else
        public List<string> NotificationTemplates { get; set; }
#endif
        /// <summary>This enum indicates the platform type for which the enrollment restriction applies.</summary>
        public global::ApiSdk.Models.EnrollmentRestrictionPlatformType? PlatformType { get; set; }
        /// <summary>This enum indicates the Template type for which the enrollment notification applies.</summary>
        public global::ApiSdk.Models.EnrollmentNotificationTemplateType? TemplateType { get; set; }
        /// <summary>
        /// Instantiates a new <see cref="global::ApiSdk.Models.DeviceEnrollmentNotificationConfiguration"/> and sets the default values.
        /// </summary>
        public DeviceEnrollmentNotificationConfiguration() : base()
        {
            OdataType = "#microsoft.graph.deviceEnrollmentNotificationConfiguration";
        }
        /// <summary>
        /// Creates a new instance of the appropriate class based on discriminator value
        /// </summary>
        /// <returns>A <see cref="global::ApiSdk.Models.DeviceEnrollmentNotificationConfiguration"/></returns>
        /// <param name="parseNode">The parse node to use to read the discriminator value and create the object</param>
        public static new global::ApiSdk.Models.DeviceEnrollmentNotificationConfiguration CreateFromDiscriminatorValue(IParseNode parseNode)
        {
            _ = parseNode ?? throw new ArgumentNullException(nameof(parseNode));
            return new global::ApiSdk.Models.DeviceEnrollmentNotificationConfiguration();
        }
        /// <summary>
        /// The deserialization information for the current model
        /// </summary>
        /// <returns>A IDictionary&lt;string, Action&lt;IParseNode&gt;&gt;</returns>
        public override IDictionary<string, Action<IParseNode>> GetFieldDeserializers()
        {
            return new Dictionary<string, Action<IParseNode>>(base.GetFieldDeserializers())
            {
                { "brandingOptions", n => { BrandingOptions = n.GetEnumValue<global::ApiSdk.Models.EnrollmentNotificationBrandingOptions>(); } },
                { "defaultLocale", n => { DefaultLocale = n.GetStringValue(); } },
                { "notificationMessageTemplateId", n => { NotificationMessageTemplateId = n.GetGuidValue(); } },
                { "notificationTemplates", n => { NotificationTemplates = n.GetCollectionOfPrimitiveValues<string>()?.AsList(); } },
                { "platformType", n => { PlatformType = n.GetEnumValue<global::ApiSdk.Models.EnrollmentRestrictionPlatformType>(); } },
                { "templateType", n => { TemplateType = n.GetEnumValue<global::ApiSdk.Models.EnrollmentNotificationTemplateType>(); } },
            };
        }
        /// <summary>
        /// Serializes information the current object
        /// </summary>
        /// <param name="writer">Serialization writer to use to serialize this model</param>
        public override void Serialize(ISerializationWriter writer)
        {
            _ = writer ?? throw new ArgumentNullException(nameof(writer));
            base.Serialize(writer);
            writer.WriteEnumValue<global::ApiSdk.Models.EnrollmentNotificationBrandingOptions>("brandingOptions", BrandingOptions);
            writer.WriteStringValue("defaultLocale", DefaultLocale);
            writer.WriteGuidValue("notificationMessageTemplateId", NotificationMessageTemplateId);
            writer.WriteCollectionOfPrimitiveValues<string>("notificationTemplates", NotificationTemplates);
            writer.WriteEnumValue<global::ApiSdk.Models.EnrollmentRestrictionPlatformType>("platformType", PlatformType);
            writer.WriteEnumValue<global::ApiSdk.Models.EnrollmentNotificationTemplateType>("templateType", TemplateType);
        }
    }
}
#pragma warning restore CS0618
